var chai = require("chai");
var assert = chai.assert;
var outputFileSync = require('output-file-sync');
var SysId = require('../index');
var serialpath = '/tmp/tokentestvalid1' + new Date().getTime();
var newserial = { auth: 'tfpi97fp7i' };
var oldserial = new SysId(serialpath, { tracker: true });
oldserial.validate(oldserial.serial, newserial);
newserial = oldserial.read();
describe('update', function () {
    describe('check basic existence', function () {
        it('must return something', function () {
            assert.ok(oldserial, 'torna il vecchio seriale');
            assert.ok(newserial, 'torna il nuovo seriale');
        });
    });
    describe('check if is an object', function () {
        it('must be an object', function () {
            assert.isObject(oldserial, 'new serial file is an object');
            assert.isObject(newserial, 'new serial file is an object');
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdmFsaWRhdGV3aXRobmV3c2VyaWFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLElBQVksSUFBSSxXQUFNLE1BQU0sQ0FBQyxDQUFBO0FBQzdCLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7QUFDekIsSUFBSSxjQUFjLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDakQsSUFBTyxLQUFLLFdBQVMsVUFBVSxDQUFDLENBQUM7QUFFakMsSUFBSSxVQUFVLEdBQUMsc0JBQXNCLEdBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUMzRCxJQUFJLFNBQVMsR0FBQyxFQUFDLElBQUksRUFBQyxZQUFZLEVBQUMsQ0FBQztBQUNsQyxJQUFJLFNBQVMsR0FBSyxJQUFJLEtBQUssQ0FBQyxVQUFVLEVBQUMsRUFBQyxPQUFPLEVBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQztBQUN2RCxTQUFTLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUMsU0FBUyxDQUFDLENBQUM7QUFDL0MsU0FBUyxHQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUUzQixRQUFRLENBQUMsUUFBUSxFQUFFO0lBRWpCLFFBQVEsQ0FBQyx1QkFBdUIsRUFBRTtRQUVsQyxFQUFFLENBQUMsdUJBQXVCLEVBQUU7WUFDMUIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUNoRCxNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBRWhELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsdUJBQXVCLEVBQUU7UUFFaEMsRUFBRSxDQUFDLG1CQUFtQixFQUFFO1lBRXhCLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLDhCQUE4QixDQUFDLENBQUM7WUFDM0QsTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsOEJBQThCLENBQUMsQ0FBQztRQUUzRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0gsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoidGVzdC92YWxpZGF0ZXdpdGhuZXdzZXJpYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBtb2NoYSBmcm9tIFwibW9jaGFcIjtcbmltcG9ydCAqIGFzIGNoYWkgZnJvbSBcImNoYWlcIjtcbmxldCBhc3NlcnQgPSBjaGFpLmFzc2VydDtcbmxldCBvdXRwdXRGaWxlU3luYyA9IHJlcXVpcmUoJ291dHB1dC1maWxlLXN5bmMnKTtcbmltcG9ydCBTeXNJZD1yZXF1aXJlKCcuLi9pbmRleCcpO1xuXG5sZXQgc2VyaWFscGF0aD0nL3RtcC90b2tlbnRlc3R2YWxpZDEnK25ldyBEYXRlKCkuZ2V0VGltZSgpO1xubGV0IG5ld3NlcmlhbD17YXV0aDondGZwaTk3ZnA3aSd9O1xubGV0IG9sZHNlcmlhbDphbnk9bmV3IFN5c0lkKHNlcmlhbHBhdGgse3RyYWNrZXI6dHJ1ZX0pO1xub2xkc2VyaWFsLnZhbGlkYXRlKG9sZHNlcmlhbC5zZXJpYWwsbmV3c2VyaWFsKTtcbm5ld3NlcmlhbD1vbGRzZXJpYWwucmVhZCgpO1xuXG5kZXNjcmliZSgndXBkYXRlJywgZnVuY3Rpb24oKSB7XG5cbiAgZGVzY3JpYmUoJ2NoZWNrIGJhc2ljIGV4aXN0ZW5jZScsIGZ1bmN0aW9uKCkge1xuXG4gIGl0KCdtdXN0IHJldHVybiBzb21ldGhpbmcnLCBmdW5jdGlvbigpIHtcbiAgICBhc3NlcnQub2sob2xkc2VyaWFsLCd0b3JuYSBpbCB2ZWNjaGlvIHNlcmlhbGUnKTtcbiAgICBhc3NlcnQub2sobmV3c2VyaWFsLCd0b3JuYSBpbCBudW92byBzZXJpYWxlJyk7XG5cbiAgfSk7XG59KTtcblxuZGVzY3JpYmUoJ2NoZWNrIGlmIGlzIGFuIG9iamVjdCcsIGZ1bmN0aW9uKCkge1xuXG4gIGl0KCdtdXN0IGJlIGFuIG9iamVjdCcsIGZ1bmN0aW9uKCkge1xuXG4gIGFzc2VydC5pc09iamVjdChvbGRzZXJpYWwsICduZXcgc2VyaWFsIGZpbGUgaXMgYW4gb2JqZWN0Jyk7XG4gIGFzc2VydC5pc09iamVjdChuZXdzZXJpYWwsICduZXcgc2VyaWFsIGZpbGUgaXMgYW4gb2JqZWN0Jyk7XG5cbiAgfSk7XG59KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
